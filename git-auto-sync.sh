#!/bin/bash

# GitHub自動同期スクリプト
# 定期的なPush/Pull用

set -e  # エラー時に停止

REPO_URL="https://github.com/Kensan196948G/ITSM-ITManagementSystem.git"
BRANCH="main"
LOG_FILE="logs/git-sync.log"

# ログディレクトリ作成
mkdir -p logs

# ログ出力関数
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "🔄 Starting Git Auto-Sync..."

# Git設定確認
if [ ! -d ".git" ]; then
    log "❌ Not a git repository. Initializing..."
    git init
    git remote add origin "$REPO_URL"
fi

# リモート確認
if ! git remote get-url origin > /dev/null 2>&1; then
    git remote add origin "$REPO_URL"
    log "✅ Added remote origin: $REPO_URL"
fi

# ブランチ確認・作成
current_branch=$(git branch --show-current 2>/dev/null || echo "")
if [ -z "$current_branch" ]; then
    log "📝 Creating initial branch: $BRANCH"
    git checkout -b "$BRANCH"
fi

# 最初のPull（リモートリポジトリが既に存在する場合）
log "📥 Pulling latest changes from remote..."
if git ls-remote --exit-code --heads origin "$BRANCH" > /dev/null 2>&1; then
    git pull origin "$BRANCH" --allow-unrelated-histories || {
        log "⚠️  Pull failed, continuing with local changes..."
    }
else
    log "📝 Remote branch $BRANCH doesn't exist yet. Will create on first push."
fi

# 変更があるかチェック
if [ -z "$(git status --porcelain)" ]; then
    log "✅ No changes to commit"
else
    log "📝 Changes detected, committing..."
    
    # ファイルをステージング
    git add .
    
    # コミット（自動生成メッセージ）
    commit_message="Auto-sync: $(date '+%Y-%m-%d %H:%M:%S') - ITSM Development Progress

🤖 Generated by Claude-Flow Auto-Sync

Changes:
$(git diff --cached --name-status | head -20)

🚀 Generated with Claude Code
Co-Authored-By: Claude <noreply@anthropic.com>"
    
    git commit -m "$commit_message"
    log "✅ Changes committed"
fi

# Push
log "📤 Pushing to GitHub..."
if git push origin "$BRANCH"; then
    log "✅ Successfully pushed to GitHub"
else
    log "❌ Push failed. You may need to set up authentication."
    log "💡 Tip: Use 'gh auth login' or set up Personal Access Token"
    exit 1
fi

log "🎉 Git Auto-Sync completed successfully!"