import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Suspense, lazy } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import Layout from './components/layout/Layout';
import Dashboard from './pages/Dashboard';
import Login from './pages/Login';
import ProtectedRoute from './components/auth/ProtectedRoute';
import NotificationSystem from './components/common/NotificationSystem';
import { AccessibilityProvider } from './components/common/AccessibilityHelper';
import { ErrorBoundary } from './components/common/ErrorBoundary';
import { AuthProvider, useAuth } from './contexts/AuthContext';
import { LazyTicketList, LazyTicketDetail, LazyCreateTicket, LazyUserList, LazyUserDetail, LazyCreateUser, TicketListSkeleton, DashboardSkeleton, } from './components/common/LazyComponents';
// ITSM管理ページの動的インポート
const LazyIncidentList = lazy(() => import('./pages/incidents/IncidentList'));
const LazyProblemList = lazy(() => import('./pages/problems/ProblemList'));
// ダッシュボードページの動的インポート
const LazyPerformanceAnalytics = lazy(() => import('./pages/dashboards/PerformanceAnalytics'));
const LazySLAMonitoring = lazy(() => import('./pages/dashboards/SLAMonitoring'));
const LazyRealTimeMonitoring = lazy(() => import('./pages/dashboards/RealTimeMonitoring'));
// システム設定ページの動的インポート
const LazySystemSettings = lazy(() => import('./pages/settings/SystemSettings'));
// Protected Routes Component
const ProtectedApp = () => {
    return (_jsxs(Layout, { children: [_jsxs(Routes, { children: [_jsx(Route, { path: "/", element: _jsx(Navigate, { to: "/dashboard", replace: true }) }), _jsx(Route, { path: "/dashboard", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(Dashboard, {}) }) }) }), _jsx(Route, { path: "/incidents", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyIncidentList, {}) }) }) }), _jsx(Route, { path: "/incidents/active", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyIncidentList, {}) }) }) }), _jsx(Route, { path: "/incidents/pending", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyIncidentList, {}) }) }) }), _jsx(Route, { path: "/incidents/resolved", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyIncidentList, {}) }) }) }), _jsx(Route, { path: "/incidents/create", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u65B0\u898F\u30A4\u30F3\u30B7\u30C7\u30F3\u30C8\u4F5C\u6210\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/incidents/:id", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30A4\u30F3\u30B7\u30C7\u30F3\u30C8\u8A73\u7D30\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/problems", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyProblemList, {}) }) }) }), _jsx(Route, { path: "/problems/open", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyProblemList, {}) }) }) }), _jsx(Route, { path: "/problems/investigation", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyProblemList, {}) }) }) }), _jsx(Route, { path: "/problems/closed", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyProblemList, {}) }) }) }), _jsx(Route, { path: "/problems/rca", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u6839\u672C\u539F\u56E0\u5206\u6790\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/changes", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u5909\u66F4\u7BA1\u7406\u4E00\u89A7\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/changes/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u5909\u66F4\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/releases", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u30EA\u30EA\u30FC\u30B9\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/releases/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30EA\u30EA\u30FC\u30B9\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/cmdb/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u69CB\u6210\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/services", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u30B5\u30FC\u30D3\u30B9\u30AB\u30BF\u30ED\u30B0\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/services/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30B5\u30FC\u30D3\u30B9\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/capacity", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u5BB9\u91CF\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/availability", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u53EF\u7528\u6027\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/performance", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx("div", { children: "\u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9\u5206\u6790\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/tickets", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyTicketList, {}) }) }) }), _jsx(Route, { path: "/tickets/create", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyCreateTicket, {}) }) }) }), _jsx(Route, { path: "/tickets/:id", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyTicketDetail, {}) }) }) }), _jsx(Route, { path: "/users", element: _jsx(ProtectedRoute, { roles: ['admin', 'manager'], children: _jsx(Suspense, { fallback: _jsx(TicketListSkeleton, {}), children: _jsx(LazyUserList, {}) }) }) }), _jsx(Route, { path: "/users/create", element: _jsx(ProtectedRoute, { roles: ['admin', 'manager'], children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyCreateUser, {}) }) }) }), _jsx(Route, { path: "/users/:id", element: _jsx(ProtectedRoute, { roles: ['admin', 'manager'], children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyUserDetail, {}) }) }) }), _jsx(Route, { path: "/reports", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30EC\u30DD\u30FC\u30C8\u30FB\u5206\u6790\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/reports/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u8A73\u7D30\u30EC\u30DD\u30FC\u30C8\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/knowledge", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30CA\u30EC\u30C3\u30B8\u30D9\u30FC\u30B9\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/knowledge/*", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx("div", { children: "\u30CA\u30EC\u30C3\u30B8\u7BA1\u7406\u30DA\u30FC\u30B8\uFF08\u958B\u767A\u4E2D\uFF09" }) }) }) }), _jsx(Route, { path: "/settings", element: _jsx(ProtectedRoute, { roles: ['admin'], children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazySystemSettings, {}) }) }) }), _jsx(Route, { path: "/settings/:category", element: _jsx(ProtectedRoute, { roles: ['admin'], children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazySystemSettings, {}) }) }) }), _jsx(Route, { path: "/dashboard/performance", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyPerformanceAnalytics, {}) }) }) }), _jsx(Route, { path: "/dashboard/sla", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazySLAMonitoring, {}) }) }) }), _jsx(Route, { path: "/dashboard/realtime", element: _jsx(ProtectedRoute, { children: _jsx(Suspense, { fallback: _jsx(DashboardSkeleton, {}), children: _jsx(LazyRealTimeMonitoring, {}) }) }) }), _jsx(Route, { path: "*", element: _jsx(Navigate, { to: "/dashboard", replace: true }) })] }), _jsx(NotificationSystem, {})] }));
};
// Login Route Component
const LoginRoute = () => {
    const { authState, login, clearError } = useAuth();
    return (_jsx(Login, { onLogin: login, loading: authState.loading, error: authState.error, clearError: clearError }));
};
const App = () => {
    return (_jsx(ErrorBoundary, { children: _jsx(AuthProvider, { children: _jsx(AccessibilityProvider, { children: _jsxs(Routes, { children: [_jsx(Route, { path: "/login", element: _jsx(LoginRoute, {}) }), _jsx(Route, { path: "/*", element: _jsx(ProtectedApp, {}) })] }) }) }) }));
};
export default App;
