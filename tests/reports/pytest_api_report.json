{"created": 1754125460.6049912, "duration": 0.21514415740966797, "exitcode": 1, "root": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem", "environment": {}, "summary": {"passed": 10, "error": 10, "total": 20, "collected": 57}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/api/__init__.py", "type": "Package"}, {"nodeid": "tests/api/incidents/test_incidents_crud.py", "type": "Module"}, {"nodeid": "tests/api/incidents/test_incidents_history.py", "type": "Module"}]}, {"nodeid": "tests/api/test_auth.py::TestAuthentication", "outcome": "passed", "result": [{"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_success", "type": "Function", "lineno": 14}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_invalid_client", "type": "Function", "lineno": 49}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_invalid_grant", "type": "Function", "lineno": 78}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_refresh_token_success", "type": "Function", "lineno": 107}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_with_valid_token", "type": "Function", "lineno": 138}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_with_invalid_token", "type": "Function", "lineno": 159}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_without_token", "type": "Function", "lineno": 186}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_token_expiration_handling", "type": "Function", "lineno": 205}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_login_validation_comprehensive", "type": "Function", "lineno": 232}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_session_management", "type": "Function", "lineno": 263}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_multi_factor_authentication", "type": "Function", "lineno": 292}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_concurrent_auth_requests", "type": "Function", "lineno": 346}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_rate_limiting_with_authentication", "type": "Function", "lineno": 395}]}, {"nodeid": "tests/api/test_auth.py", "outcome": "passed", "result": [{"nodeid": "tests/api/test_auth.py::TestAuthentication", "type": "Class"}]}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI", "outcome": "passed", "result": [{"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_incident_full_lifecycle", "type": "Function", "lineno": 17}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_problem_management_api", "type": "Function", "lineno": 125}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_change_management_api", "type": "Function", "lineno": 152}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_cmdb_api_endpoints", "type": "Function", "lineno": 180}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_authentication_endpoints", "type": "Function", "lineno": 207}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_reporting_api_endpoints", "type": "Function", "lineno": 242}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_notification_api_endpoints", "type": "Function", "lineno": 287}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_user_management_api", "type": "Function", "lineno": 328}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_category_management_api", "type": "Function", "lineno": 369}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_team_management_api", "type": "Function", "lineno": 414}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_health_check_endpoints", "type": "Function", "lineno": 454}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_search_api_endpoints", "type": "Function", "lineno": 489}]}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance", "outcome": "passed", "result": [{"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance::test_incident_creation_performance", "type": "Function", "lineno": 546}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance::test_incident_list_performance", "type": "Function", "lineno": 572}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance::test_concurrent_api_requests", "type": "Function", "lineno": 607}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance::test_api_rate_limiting", "type": "Function", "lineno": 658}]}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity", "outcome": "passed", "result": [{"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity::test_unauthorized_access", "type": "Function", "lineno": 707}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity::test_invalid_token_access", "type": "Function", "lineno": 729}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity::test_sql_injection_protection", "type": "Function", "lineno": 758}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity::test_xss_protection", "type": "Function", "lineno": 782}]}, {"nodeid": "tests/api/test_comprehensive_api.py", "outcome": "passed", "result": [{"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI", "type": "Class"}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPIPerformance", "type": "Class"}, {"nodeid": "tests/api/test_comprehensive_api.py::TestAPISecurity", "type": "Class"}]}, {"nodeid": "tests/api/test_health.py::TestHealthCheck", "outcome": "passed", "result": [{"nodeid": "tests/api/test_health.py::TestHealthCheck::test_health_endpoint_success", "type": "Function", "lineno": 11}, {"nodeid": "tests/api/test_health.py::TestHealthCheck::test_version_endpoint_success", "type": "Function", "lineno": 33}]}, {"nodeid": "tests/api/test_health.py::TestAPIPerformance", "outcome": "passed", "result": [{"nodeid": "tests/api/test_health.py::TestAPIPerformance::test_health_endpoint_performance", "type": "Function", "lineno": 61}, {"nodeid": "tests/api/test_health.py::TestAPIPerformance::test_concurrent_health_requests", "type": "Function", "lineno": 74}]}, {"nodeid": "tests/api/test_health.py", "outcome": "passed", "result": [{"nodeid": "tests/api/test_health.py::TestHealthCheck", "type": "Class"}, {"nodeid": "tests/api/test_health.py::TestAPIPerformance", "type": "Class"}]}, {"nodeid": "tests/api/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/api/test_auth.py", "type": "Module"}, {"nodeid": "tests/api/test_comprehensive_api.py", "type": "Module"}, {"nodeid": "tests/api/test_health.py", "type": "Module"}]}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD", "outcome": "passed", "result": [{"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_create_incident_success", "type": "Function", "lineno": 16}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_create_incident_validation_error", "type": "Function", "lineno": 44}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_get_incident_by_id_success", "type": "Function", "lineno": 90}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_get_incident_not_found", "type": "Function", "lineno": 141}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_update_incident_success", "type": "Function", "lineno": 165}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_update_incident_invalid_status_transition", "type": "Function", "lineno": 196}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_list_incidents_with_pagination", "type": "Function", "lineno": 231}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_list_incidents_with_filters", "type": "Function", "lineno": 288}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_delete_incident_success", "type": "Function", "lineno": 333}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_delete_incident_not_found", "type": "Function", "lineno": 347}, {"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD::test_bulk_incident_operations", "type": "Function", "lineno": 370}]}, {"nodeid": "tests/api/incidents/test_incidents_crud.py", "outcome": "passed", "result": [{"nodeid": "tests/api/incidents/test_incidents_crud.py::TestIncidentsCRUD", "type": "Class"}]}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory", "outcome": "passed", "result": [{"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_get_incident_history_success", "type": "Function", "lineno": 14}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_get_incident_history_with_filters", "type": "Function", "lineno": 95}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_add_work_note_success", "type": "Function", "lineno": 140}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_add_work_note_validation_error", "type": "Function", "lineno": 176}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_get_work_notes_list", "type": "Function", "lineno": 216}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_incident_assignment_workflow", "type": "Function", "lineno": 264}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_incident_escalation_workflow", "type": "Function", "lineno": 304}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_incident_resolution_workflow", "type": "Function", "lineno": 342}, {"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory::test_incident_closure_workflow", "type": "Function", "lineno": 387}]}, {"nodeid": "tests/api/incidents/test_incidents_history.py", "outcome": "passed", "result": [{"nodeid": "tests/api/incidents/test_incidents_history.py::TestIncidentHistory", "type": "Class"}]}], "tests": [{"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_success", "lineno": 14, "outcome": "passed", "keywords": ["test_oauth_token_request_success", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.030184912000549957, "outcome": "passed"}, "call": {"duration": 0.0009595899900887161, "outcome": "passed"}, "teardown": {"duration": 0.00016914401203393936, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_invalid_client", "lineno": 49, "outcome": "passed", "keywords": ["test_oauth_token_request_invalid_client", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00028364900208543986, "outcome": "passed"}, "call": {"duration": 0.0007596890063723549, "outcome": "passed"}, "teardown": {"duration": 0.00016143600805662572, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_oauth_token_request_invalid_grant", "lineno": 78, "outcome": "passed", "keywords": ["test_oauth_token_request_invalid_grant", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002669969981070608, "outcome": "passed"}, "call": {"duration": 0.0005678710003849119, "outcome": "passed"}, "teardown": {"duration": 0.00014086200098972768, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_refresh_token_success", "lineno": 107, "outcome": "passed", "keywords": ["test_refresh_token_success", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00026513999910093844, "outcome": "passed"}, "call": {"duration": 0.0006617100007133558, "outcome": "passed"}, "teardown": {"duration": 0.00016198500816244632, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_with_valid_token", "lineno": 138, "outcome": "error", "keywords": ["test_api_request_with_valid_token", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00030757198692299426, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py, line 139\n      def test_api_request_with_valid_token(self, test_config, auth_token):\nE       fixture 'auth_token' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py:139"}, "teardown": {"duration": 0.00019850899116136134, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_with_invalid_token", "lineno": 159, "outcome": "passed", "keywords": ["test_api_request_with_invalid_token", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00032172800274565816, "outcome": "passed"}, "call": {"duration": 0.0006693210016237572, "outcome": "passed"}, "teardown": {"duration": 0.0001498729980085045, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_api_request_without_token", "lineno": 186, "outcome": "passed", "keywords": ["test_api_request_without_token", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00026978600362781435, "outcome": "passed"}, "call": {"duration": 0.0006921320018591359, "outcome": "passed"}, "teardown": {"duration": 0.00014623200695496053, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_token_expiration_handling", "lineno": 205, "outcome": "passed", "keywords": ["test_token_expiration_handling", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002599789877422154, "outcome": "passed"}, "call": {"duration": 0.0005432309990283102, "outcome": "passed"}, "teardown": {"duration": 0.0001386860094498843, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_login_validation_comprehensive", "lineno": 232, "outcome": "passed", "keywords": ["test_login_validation_comprehensive", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002541430003475398, "outcome": "passed"}, "call": {"duration": 0.06790004900540225, "outcome": "passed"}, "teardown": {"duration": 0.00017534800281282514, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_session_management", "lineno": 263, "outcome": "error", "keywords": ["test_session_management", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00032868600101210177, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py, line 264\n      def test_session_management(self, test_config, auth_token):\nE       fixture 'auth_token' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py:264"}, "teardown": {"duration": 0.0001661529968259856, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_multi_factor_authentication", "lineno": 292, "outcome": "passed", "keywords": ["test_multi_factor_authentication", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002700810000533238, "outcome": "passed"}, "call": {"duration": 0.0010732000082498416, "outcome": "passed"}, "teardown": {"duration": 0.00015681100194342434, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_concurrent_auth_requests", "lineno": 346, "outcome": "passed", "keywords": ["test_concurrent_auth_requests", "slow", "pytestmark", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002578160056145862, "outcome": "passed"}, "call": {"duration": 0.002002245993935503, "outcome": "passed"}, "teardown": {"duration": 0.00016870800754986703, "outcome": "passed"}}, {"nodeid": "tests/api/test_auth.py::TestAuthentication::test_rate_limiting_with_authentication", "lineno": 395, "outcome": "error", "keywords": ["test_rate_limiting_with_authentication", "slow", "pytestmark", "TestAuthentication", "auth", "api", "test_auth.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002815979969454929, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py, line 396\n      @pytest.mark.slow\n      def test_rate_limiting_with_authentication(self, test_config, auth_token):\nE       fixture 'auth_token' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_auth.py:396"}, "teardown": {"duration": 0.00014492501213680953, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_incident_full_lifecycle", "lineno": 17, "outcome": "error", "keywords": ["test_incident_full_lifecycle", "incidents", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.015279532002750784, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 18\n      @pytest.mark.incidents\n      def test_incident_full_lifecycle(self, api_client, sample_incident_data, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:18"}, "teardown": {"duration": 0.00016185898857656866, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_problem_management_api", "lineno": 125, "outcome": "error", "keywords": ["test_problem_management_api", "problems", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00039859900425653905, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 126\n      @pytest.mark.problems\n      def test_problem_management_api(self, api_client, sample_problem_data, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:126"}, "teardown": {"duration": 0.00014340800407808274, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_change_management_api", "lineno": 152, "outcome": "error", "keywords": ["test_change_management_api", "changes", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00024549000954721123, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 153\n      @pytest.mark.changes\n      def test_change_management_api(self, api_client, sample_change_data, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:153"}, "teardown": {"duration": 0.00013536200276575983, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_cmdb_api_endpoints", "lineno": 180, "outcome": "error", "keywords": ["test_cmdb_api_endpoints", "cmdb", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00024993599799927324, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 181\n      @pytest.mark.cmdb\n      def test_cmdb_api_endpoints(self, api_client, sample_ci_data, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:181"}, "teardown": {"duration": 0.00013394499546848238, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_authentication_endpoints", "lineno": 207, "outcome": "error", "keywords": ["test_authentication_endpoints", "auth", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00023422000231221318, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 208\n      @pytest.mark.auth\n      def test_authentication_endpoints(self, api_client, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:208"}, "teardown": {"duration": 0.00013333300012163818, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_reporting_api_endpoints", "lineno": 242, "outcome": "error", "keywords": ["test_reporting_api_endpoints", "reports", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.00023236300330609083, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 243\n      @pytest.mark.reports\n      def test_reporting_api_endpoints(self, api_client, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:243"}, "teardown": {"duration": 0.00015435800014529377, "outcome": "passed"}}, {"nodeid": "tests/api/test_comprehensive_api.py::TestComprehensiveAPI::test_notification_api_endpoints", "lineno": 287, "outcome": "error", "keywords": ["test_notification_api_endpoints", "notifications", "pytestmark", "TestComprehensiveAPI", "comprehensive", "api", "test_comprehensive_api.py", "tests/api/__init__.py", "ITSM-ITmanagementSystem"], "setup": {"duration": 0.0002456660004099831, "outcome": "failed", "longrepr": "file /media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py, line 288\n      @pytest.mark.notifications\n      def test_notification_api_endpoints(self, api_client, test_config):\nE       fixture 'api_client' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, api_headers, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, clean_test_environment, client, cov, doctest_namespace, event_loop, extra, extras, faker, faker_instance, include_metadata_in_junit_xml, json_metadata, metadata, mock_client, mock_response, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_change_data, sample_ci_data, sample_incident_data, sample_problem_data, sample_user_data, session_mocker, test_config, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py:288"}, "teardown": {"duration": 0.00013468100223690271, "outcome": "passed"}}], "warnings": [{"message": "Please use `import python_multipart` instead.", "category": "PendingDeprecationWarning", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/starlette/formparsers.py", "lineno": 10}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1093}, {"message": "'crypt' is deprecated and slated for removal in Python 3.13", "category": "DeprecationWarning", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/passlib/utils/__init__.py", "lineno": 854}, {"message": "The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)", "category": "MovedIn20Warning", "when": "config", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/backend/app/db/base.py", "lineno": 21}, {"message": "`min_items` is deprecated and will be removed, use `min_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1062}, {"message": "`max_items` is deprecated and will be removed, use `max_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1068}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "`min_items` is deprecated and will be removed, use `min_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/home/kensan/.local/lib/python3.12/site-packages/pydantic/fields.py", "lineno": 1062}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/backend/app/schemas/attachment.py", "lineno": 152}, {"message": "Unknown pytest.mark.comprehensive - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 14}, {"message": "Unknown pytest.mark.problems - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 126}, {"message": "Unknown pytest.mark.changes - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 153}, {"message": "Unknown pytest.mark.cmdb - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 181}, {"message": "Unknown pytest.mark.reports - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 243}, {"message": "Unknown pytest.mark.notifications - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 288}, {"message": "Unknown pytest.mark.users - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 329}, {"message": "Unknown pytest.mark.categories - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 370}, {"message": "Unknown pytest.mark.teams - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 415}, {"message": "Unknown pytest.mark.health - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 455}, {"message": "Unknown pytest.mark.search - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 490}, {"message": "Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 543}, {"message": "Unknown pytest.mark.load - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 659}, {"message": "Unknown pytest.mark.security - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/media/kensan/LinuxHDD/ITSM-ITmanagementSystem/tests/api/test_comprehensive_api.py", "lineno": 704}]}